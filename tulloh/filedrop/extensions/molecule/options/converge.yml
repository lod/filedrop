---
# Most testing is done by the default scenario
# The focus here is the options and corner cases
# We verify as we go, it allows multiple option tests
- name: Converge
  hosts: all
  gather_facts: false
  tasks:

    - name: Delete dumped directory - start from blank slate
      ansible.builtin.file:
        state: absent
        path: /dumped
    - name: Initial check run should want to make changes
      filedrop:
      check_mode: true
      diff: false
      register: predrop_check
    - name: Initial check + diff should show changes
      filedrop:
      check_mode: true
      diff: true
      register: predrop_diff
    - name: Ensure nothing has been transferred yet
      ansible.builtin.stat:
        path: /dumped
      register: predrop_stat
    - name: Real run + diff should make and show changes
      filedrop:
      check_mode: false
      diff: true
      register: filedrop_change
    - name: Post-run check should show no changes
      filedrop:
      check_mode: true
      diff: false
      register: postdrop_check
    - name: Post-run check + diff should show no changes
      filedrop:
      check_mode: true
      diff: true
      register: postdrop_diff

    - name: Test the check/change/check results
      ansible.builtin.assert:
        that:
          - predrop_check.changed == true
          - predrop_diff.changed == true
          - filedrop_change.changed == true
          - postdrop_check.changed == false
          - postdrop_diff.changed == false
          - predrop_stat.stat.exists == false
          - predrop_check.diff == {}
          - postdrop_check.diff == {}
          - 'predrop_diff.diff["/"] == {"after": {"path": "/"}, "before": {"path": "/"}}'
          - 'predrop_diff.diff["/dumped"] == {"after": {"path": "/dumped", "state": "directory"}, "before": {"path": "/dumped", "state": "absent"}}'
          # file includes the full local path in after_header
          - predrop_diff.diff["/dumped/f1"] | length == 3
          - predrop_diff.diff["/dumped/f1"].after == ""
          - predrop_diff.diff["/dumped/f1"].after_header.endswith("/molecule/options/files/dumped/f1")
          - predrop_diff.diff["/dumped/f1"].before == ""
          - predrop_diff.diff["/dumped/t1"] | length == 3
          # template includes the temporary template path in after_header
          - predrop_diff.diff["/dumped/t1"].after == ""
          - ("ansible-local" in predrop_diff.diff["/dumped/t1"].after_header)
          - predrop_diff.diff["/dumped/t1"].after_header.endswith("/t1")
          - predrop_diff.diff["/dumped/t1"].before == ""
          - predrop_diff.diff | length == 5
          # Real run diff should match the planned one
          - filedrop_change.diff | length == 5
          - filedrop_change.diff["/"] == predrop_diff.diff["/"]
          - filedrop_change.diff["/dumped"] == predrop_diff.diff["/dumped"]
          - filedrop_change.diff["/dumped/f1"] == predrop_diff.diff["/dumped/f1"]
          - filedrop_change.diff["/dumped/f2"] == predrop_diff.diff["/dumped/f2"]
          - filedrop_change.diff["/dumped/t1"] | length == 3
          # template includes the temporary template path in after_header
          - filedrop_change.diff["/dumped/t1"].after == ""
          - ("ansible-local" in predrop_diff.diff["/dumped/t1"].after_header)
          - filedrop_change.diff["/dumped/t1"].after_header.endswith("/t1")
          - filedrop_change.diff["/dumped/t1"].before == ""
          # When we have no changes the before and afters should be the same
          - postdrop_diff.diff | length == 5
          - postdrop_diff.diff["/"].before == postdrop_diff.diff["/"].after
          - postdrop_diff.diff["/dumped"].before == postdrop_diff.diff["/dumped"].after
          - postdrop_diff.diff["/dumped/f1"].before == postdrop_diff.diff["/dumped/f1"].after
          - postdrop_diff.diff["/dumped/f2"].before == postdrop_diff.diff["/dumped/f2"].after
          - postdrop_diff.diff["/dumped/t1"].before == postdrop_diff.diff["/dumped/t1"].after


    # Currently all files (f1 and f2) have been transferred
    # Remove f2, ensure it, and only it, changes
    - name: Delete f2
      ansible.builtin.file:
        state: absent
        path: /dumped/f2
      register: f2_delete
    - name: Prepare to change f2
      filedrop:
      check_mode: true
      diff: true
      register: f2_prep
    - name: Ensure f2 hasn't been transferred yet
      ansible.builtin.stat:
        path: /dumped/f2
      register: f2_stat
    - name: Change f2
      filedrop:
      check_mode: false
      diff: true
      register: f2_change
    - name: Test the check/change/check results
      ansible.builtin.assert:
        that:
          - f2_delete.changed == true
          - f2_prep.changed == true
          - f2_change.changed == true
          - f2_stat.stat.exists == false
          - f2_prep.tree["/dumped/f1"].changed == false
          - f2_prep.tree["/dumped/f2"].changed == true
          - f2_change.tree["/dumped/f1"].changed == false
          - f2_change.tree["/dumped/f2"].changed == true
          # We should only be changing f2, other items before/after should be the same
          - f2_prep.diff | length == 5
          - f2_prep.diff["/"].before == f2_prep.diff["/"].after
          - f2_prep.diff["/dumped"].before == f2_prep.diff["/dumped"].after
          - f2_prep.diff["/dumped/f1"].before == f2_prep.diff["/dumped/f1"].after
          - f2_prep.diff["/dumped/t1"].before == f2_prep.diff["/dumped/t1"].after
          - f2_prep.diff["/dumped/f2"] | length == 3
          - f2_prep.diff["/dumped/f2"].after == ""
          - f2_prep.diff["/dumped/f2"].after_header.endswith("/molecule/options/files/dumped/f2")
          - f2_prep.diff["/dumped/f2"].before == ""
          # Actual change should be identical
          - f2_change.diff == f2_prep.diff

    - name: Delete alternative directory - start from blank slate
      ansible.builtin.file:
        state: absent
        path: /alternative
    - name: Transfer an alternative directory
      filedrop:
        src: custom_tree
        ignore_file: 
        directory_management_file:
    - name: Check on the transferred files
      ansible.builtin.stat:
        path: "/alternative/{{ item }}"
      loop:
        - ""  # The directory
        - alternative_file
        - .keep
        - _keep
        - .permissions
        - _permissions
        - .permissions.yml
        - _permissions.yml
      register: alt_src_stat
    - ansible.builtin.debug:
        var: alt_src_stat
    - name: Test the alternative tree results
      ansible.builtin.assert:
        that:
          - (alt_src_stat.results | selectattr("item", "eq", "alternative_file"))[0].stat.exists == true
          - (alt_src_stat.results | selectattr("item", "eq", ".keep"))[0].stat.exists == true
          - (alt_src_stat.results | selectattr("item", "eq", "_keep"))[0].stat.exists == true
          - (alt_src_stat.results | selectattr("item", "eq", ".permissions"))[0].stat.exists == true
          - (alt_src_stat.results | selectattr("item", "eq", ".permissions.yml"))[0].stat.exists == true
          - (alt_src_stat.results | selectattr("item", "eq", "_permissions"))[0].stat.exists == true
          - (alt_src_stat.results | selectattr("item", "eq", "_permissions.yml"))[0].stat.exists == true
          # Check some permissions, because we intend to change them
          - (alt_src_stat.results | selectattr("item", "eq", ""))[0].stat.pw_name == "root"
          - (alt_src_stat.results | selectattr("item", "eq", ""))[0].stat.gr_name == "root"
          - (alt_src_stat.results | selectattr("item", "eq", ""))[0].stat.mode == "0755"
          - (alt_src_stat.results | selectattr("item", "eq", "_permissions.yml"))[0].stat.pw_name == "root"
          - (alt_src_stat.results | selectattr("item", "eq", "_permissions.yml"))[0].stat.gr_name == "root"
          - (alt_src_stat.results | selectattr("item", "eq", "_permissions.yml"))[0].stat.mode == "0644"

    - name: Delete all the files, keep the directory
      ansible.builtin.file:
        state: absent
        path: "/alternative/{{ item }}"
      loop:
        - alternative_file
        - .keep
        - _keep
        - .permissions
        - _permissions
        - .permissions.yml
        # - _permissions.yml  # Don't delete this one, look for permission switch
    - name: Transfer the twisted alternative
      filedrop:
        src: custom_tree
        ignore_file: _permissions
        directory_management_file: alternative_file # sets lp:mail:0006
      register: twisted_transfer
    - name: Check on the transferred files
      ansible.builtin.stat:
        path: "/alternative/{{ item }}"
      loop:
        - ""  # The directory
        - alternative_file
        - .keep
        - _keep
        - .permissions
        - _permissions
        - .permissions.yml
        - _permissions.yml
      register: alt_twisted_stat
    - ansible.builtin.debug:
        var: alt_twisted_stat
    - name: Test the twisted tree results
      ansible.builtin.assert:
        that:
          - (alt_twisted_stat.results | selectattr("item", "eq", "alternative_file"))[0].stat.exists == false
          - (alt_twisted_stat.results | selectattr("item", "eq", ".keep"))[0].stat.exists == true
          - (alt_twisted_stat.results | selectattr("item", "eq", "_keep"))[0].stat.exists == true
          - (alt_twisted_stat.results | selectattr("item", "eq", ".permissions"))[0].stat.exists == true
          - (alt_twisted_stat.results | selectattr("item", "eq", ".permissions.yml"))[0].stat.exists == true
          - (alt_twisted_stat.results | selectattr("item", "eq", "_permissions"))[0].stat.exists == false
          - (alt_twisted_stat.results | selectattr("item", "eq", "_permissions.yml"))[0].stat.exists == true
          # Should have picked up permissions from alternative_file
          - (alt_twisted_stat.results | selectattr("item", "eq", ""))[0].stat.pw_name == "lp"
          - (alt_twisted_stat.results | selectattr("item", "eq", ""))[0].stat.gr_name == "mail"
          - (alt_twisted_stat.results | selectattr("item", "eq", ""))[0].stat.mode == "0007"
          - (alt_twisted_stat.results | selectattr("item", "eq", "_permissions.yml"))[0].stat.pw_name == "lp"
          - (alt_twisted_stat.results | selectattr("item", "eq", "_permissions.yml"))[0].stat.gr_name == "mail"
          - (alt_twisted_stat.results | selectattr("item", "eq", "_permissions.yml"))[0].stat.mode == "0006"
          # Changing permissions should register as changed
          - twisted_transfer.tree["/alternative"].changed == true
          - twisted_transfer.tree["/alternative/_permissions.yml"].changed == true

    - name: Delete all the files, keep the directory
      ansible.builtin.file:
        state: absent
        path: "/alternative/{{ item }}"
      loop:
        - alternative_file
        - .keep
        - _keep
        #- .permissions  # Don't delete this one, look for permission switch
        - _permissions
        - .permissions.yml
        - _permissions.yml
    - name: Transfer the twisted alternative
      filedrop:
        src: custom_tree
        ignore_file:
          - alternative_file
          - .permissions  # Already exists, prevent permission switch
        directory_management_file:
          - .keep  # sets owner=bin, notify=Note1
          - .permissions.yml  # sets group=audio, notify=list1,list2 via json (super twisted)
      register: alt_list_drop
      #notify: parent1  # disables the custom notifications, no way around it
    - name: Flush handlers
      meta: flush_handlers
    - name: Check on the transferred files
      ansible.builtin.stat:
        path: "/alternative/{{ item }}"
      loop:
        - ""  # The directory
        - alternative_file
        - .keep
        - _keep
        - .permissions
        - _permissions
        - .permissions.yml
        - _permissions.yml
      register: alt_list_stat

    - name: Notification run state
      debug:
        msg:
          Note1: "{{ Note1 | default('undefined') }}"
          list1: "{{ list1 | default('undefined') }}"
          list2: "{{ list2 | default('undefined') }}"
          parent1: "{{ parent1 | default('undefined') }}"
    - name: Test the list option tree results
      ansible.builtin.assert:
        that:
          - (alt_list_stat.results | selectattr("item", "eq", "alternative_file"))[0].stat.exists == false
          - (alt_list_stat.results | selectattr("item", "eq", ".keep"))[0].stat.exists == false
          - (alt_list_stat.results | selectattr("item", "eq", "_keep"))[0].stat.exists == true
          - (alt_list_stat.results | selectattr("item", "eq", ".permissions"))[0].stat.exists == true
          - (alt_list_stat.results | selectattr("item", "eq", ".permissions.yml"))[0].stat.exists == false
          - (alt_list_stat.results | selectattr("item", "eq", "_permissions"))[0].stat.exists == true
          - (alt_list_stat.results | selectattr("item", "eq", "_permissions.yml"))[0].stat.exists == true
          # Should have picked up permissions from alternative_file
          - (alt_list_stat.results | selectattr("item", "eq", ""))[0].stat.pw_name == "bin"
          - (alt_list_stat.results | selectattr("item", "eq", ""))[0].stat.gr_name == "audio"
          - (alt_list_stat.results | selectattr("item", "eq", ""))[0].stat.mode == "0755"
          - (alt_list_stat.results | selectattr("item", "eq", ".permissions"))[0].stat.pw_name == "lp"
          - (alt_list_stat.results | selectattr("item", "eq", ".permissions"))[0].stat.gr_name == "mail"
          - (alt_list_stat.results | selectattr("item", "eq", ".permissions"))[0].stat.mode == "0006"
          - (alt_list_stat.results | selectattr("item", "eq", "_permissions"))[0].stat.pw_name == "bin"
          - (alt_list_stat.results | selectattr("item", "eq", "_permissions"))[0].stat.gr_name == "audio"
          - (alt_list_stat.results | selectattr("item", "eq", "_permissions"))[0].stat.mode == "0644"

          - (alt_list_drop.tree["/alternative"].notify | sort) == (["Note1", "list1", "list2"] | sort)
          - (alt_list_drop.notify | sort) == (["Note1", "list1", "list2"] | sort)
          - Note1 is defined
          - list1 is defined
          - list2 is defined

    # /alternative at this point contains files _keep, .permissions, _permissions, _permissions.yml
    # /switch_tree contains _keep, _permissions, another_file
    # We out of band add insert_file
    # New tree should just be another_file
    - name: Out of band add extra files
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: "{{ item.state }}"
      loop:
        - {"path":"/alternative/insert_file","state":"touch"}
        - {"path":"/alternative/insert_dir", "state":"directory"}
        - {"path":"/alternative/insert_dir/inner_file","state":"touch"}


    - name: Switch filedrop to a different source tree
      filedrop:
        src: switch_tree
      register: switch_drop

    - name: Grab the new tree
      ansible.builtin.find:
        path: /alternative/
        hidden: True
        file_type: any
      register: switch_tree

    - name: Enforce the managed directories - absolute contents
      filedrop:
        src: switch_tree
        delete_unmanaged: True
      register: switch_enforced_drop

    - name: Grab the new tree
      ansible.builtin.find:
        path: /alternative/
        hidden: True
        file_type: any
      register: switch_enforced_tree

    - name: Get linked file contents
      ansible.builtin.slurp:
        src: /alternative/linked_file
      register: slurped_linked_file

    - debug:
        msg: "{{ switch_enforced_tree.files | map(attribute='path') }}"

    - debug:
        msg: "{{ switch_enforced_tree.files | map(attribute='path') | difference(['/alternative/another_file', '/alternative/linked_file']) }}"

    - name: Test the list option tree results
      ansible.builtin.assert:
        that:
          - True
          - switch_drop.tree["/alternative"].unmanaged_contents | difference(["_keep", ".permissions", "_permissions", "_permissions.yml", "insert_file", "insert_dir"]) | length == 0
          - switch_drop.tree["/alternative"].unmanaged_contents | length == 6
          - switch_tree.files | length == 8  # 6 unmanaged + 2 managed
          - ("/alternative/another_file" in switch_drop.tree)
          - switch_drop.tree | length == 4  # / /alternative another_file linked_file
          - switch_enforced_drop.tree | length == 4
          - switch_enforced_drop.tree["/alternative"].unmanaged_contents | difference(["_keep", ".permissions", "_permissions", "_permissions.yml", "insert_file", "insert_dir"]) | length == 0
          - switch_enforced_drop.tree["/alternative"].unmanaged_contents | length == 6
          - switch_enforced_tree.files | length == 2
          - (switch_enforced_tree.files | map(attribute="path") | difference(["/alternative/another_file", "/alternative/linked_file"]) | length == 0)
          # Testing symlinked file
          - slurped_linked_file.content | b64decode == "SMITH\n"


    # async tests, just want to ensure nothing weird happens
    # async isn't supported - blocked
#    - name: Delete dumped directory - start from blank slate
#      ansible.builtin.file:
#        state: absent
#        path: /dumped
#    - name: filedrop with timeout
#      filedrop:
#      async: 45
#      poll: 5  # not async - blocking
#
#    - name: Delete dumped and alternative
#      ansible.builtin.file:
#        state: absent
#        path: /{{ item }}
#      loop:
#        - dumped
#        - alternative
#    - name: async filedrop - parallel
#      filedrop:
#        src: "{{ item }}"
#      async: 45
#      poll: 0  # async - parallel
#      loop:
#        - files
#        - custom_tree
#      register: parallel_drop
#    - name: Check on an async task
#      ansible.builtin.async_status:
#        jid: "{{ parallel_drop.ansible_job_id }}"
#      register: job_result
#      until: job_result.finished
#      retries: 100
#      delay: 10
#
    - block:
        - name: async filedrop should fail
          filedrop:
          async: 45
          poll: 5  # not async - blocking
          register: async_fail
      rescue:
        - ansible.builtin.debug:
            var: async_fail
        - name: Verify that async is blocked
          ansible.builtin.assert:
            that:
              - async_fail.failed == true
              - async_fail.msg == "This action (filedrop) does not support async."

        # TODO: Parameter changes:
        #   Change source directory - walk the option tree?
        #
        # TODO: Test we modify write protected files

        
  handlers:
    - name: Note1
      ansible.builtin.set_fact:
        Note1: True
    - name: list1
      ansible.builtin.set_fact:
        list1: True
    - name: list2
      ansible.builtin.set_fact:
        list2: True
    - name: parent1
      ansible.builtin.set_fact:
        parent1: True
